{"ast":null,"code":"var _jsxFileName = \"/Users/jerwdti/Desktop/React/IvoProject/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport jsonData from './input/input.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContractRenderer = ({\n  data\n}) => {\n  if (!data || !Array.isArray(data)) return null;\n  const renderNode = (node, key, headerCount = {\n    h4: 1\n  }) => {\n    if (!node) return null; // Handle missing node\n\n    // Render text nodes\n    if (typeof node.text === \"string\") {\n      let style = {};\n      if (node.bold) style.fontWeight = \"bold\";\n      if (node.underline) style.textDecoration = \"underline\";\n      if (node.color) style.backgroundColor = node.color;\n      const textParts = node.text.split('\\n');\n      return textParts.map((part, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: style,\n          children: part\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), index < textParts.length - 1 && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 54\n        }, this), \" \"]\n      }, `${parentKey}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this));\n    }\n\n    // Handle invalid node structure\n    if (!node.type || !node.children) return null;\n\n    // Render nodes based on type\n    switch (node.type) {\n      case 'h1':\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 24\n        }, this);\n      case 'h4':\n        // Add number before <h4> content\n        const headerNumber = `${headerCount.h4}. `;\n        headerCount.h4 += 1; // Increment the header count for the next <h4>\n\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: headerNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), node.children.map((child, index) => renderNode(child, index, headerCount))]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this);\n      case 'p':\n        const Tag = 'p';\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          children: node.children.map((child, index) => {\n            if (child.bold) {\n              return /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: renderNode(child, index, headerCount)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 40\n              }, this);\n            }\n            if (child.type === 'mention') {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  backgroundColor: child.color\n                },\n                children: renderNode(child, index, headerCount)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 40\n              }, this);\n            }\n            if (child.text === '\\n') {\n              return /*#__PURE__*/_jsxDEV(\"br\", {}, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 40\n              }, this);\n            }\n            return renderNode(child, index, headerCount);\n          })\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this);\n      case 'ul':\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 24\n        }, this);\n      case 'li':\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 24\n        }, this);\n      case 'lic':\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 24\n        }, this);\n      case 'mention':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: node.color\n          },\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 24\n        }, this);\n      case 'block':\n      case 'clause':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 24\n        }, this);\n      default:\n        console.warn('Unknown node type:', node.type); // Log unknown node types\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map((node, index) => renderNode(node, index))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 12\n  }, this);\n};\n_c = ContractRenderer;\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    console.log('JSON Data:', JSON.stringify(jsonData, null, 2)); // Log formatted JSON\n    setData(jsonData);\n  }, []);\n  if (!data) {\n    console.log('Data is not loaded yet.');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 16\n    }, this);\n  }\n  console.log('Rendering with data:', data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8\",\n    children: /*#__PURE__*/_jsxDEV(ContractRenderer, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ContractRenderer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsonData","jsxDEV","_jsxDEV","ContractRenderer","data","Array","isArray","renderNode","node","key","headerCount","h4","text","style","bold","fontWeight","underline","textDecoration","color","backgroundColor","textParts","split","map","part","index","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","length","parentKey","type","child","headerNumber","Tag","console","warn","_c","App","_s","setData","log","JSON","stringify","className","_c2","$RefreshReg$"],"sources":["/Users/jerwdti/Desktop/React/IvoProject/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport jsonData from './input/input.json';\n\nconst ContractRenderer = ({ data }) => {\n    if (!data || !Array.isArray(data)) return null;\n\n    const renderNode = (node, key, headerCount = { h4: 1 }) => {\n        if (!node) return null; // Handle missing node\n\n        // Render text nodes\n        if (typeof node.text === \"string\") {\n            let style = {};\n            if (node.bold) style.fontWeight = \"bold\";\n            if (node.underline) style.textDecoration = \"underline\";\n            if (node.color) style.backgroundColor = node.color;\n\n            const textParts = node.text.split('\\n');\n            return textParts.map((part, index) => (\n                <React.Fragment key={`${parentKey}-${index}`}>\n                    <span style={style}>{part}</span>\n                    {index < textParts.length - 1 && <br />} {/* Add <br /> between parts */}\n                </React.Fragment>\n            ));\n        }\n\n        // Handle invalid node structure\n        if (!node.type || !node.children) return null;\n\n        // Render nodes based on type\n        switch (node.type) {\n            case 'h1':\n                return <h1 key={key}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</h1>;\n            case 'h4':\n                // Add number before <h4> content\n                const headerNumber = `${headerCount.h4}. `;\n                headerCount.h4 += 1; // Increment the header count for the next <h4>\n\n                return (\n                    <h4 key={key}>\n                        <span>{headerNumber}</span>\n                        {node.children.map((child, index) => renderNode(child, index, headerCount))}\n                    </h4>\n                );\n            case 'p':\n                const Tag = 'p';\n                return (\n                    <Tag key={key}>\n                        {node.children.map((child, index) => {\n                            if (child.bold) {\n                                return <strong key={index}>{renderNode(child, index, headerCount)}</strong>;\n                            }\n                            if (child.type === 'mention') {\n                                return <span key={index} style={{ backgroundColor: child.color }}>{renderNode(child, index, headerCount)}</span>;\n                            }\n                            if (child.text === '\\n') {\n                                return <br key={index} />;\n                            }\n                            return renderNode(child, index, headerCount);\n                        })}\n                    </Tag>\n                );\n            case 'ul':\n                return <ul key={key}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</ul>;\n            case 'li':\n                return <li key={key}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</li>;\n            case 'lic':\n                return <React.Fragment key={key}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</React.Fragment>;\n            case 'mention':\n                return <span key={key} style={{ backgroundColor: node.color }}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</span>;\n            case 'block':\n            case 'clause':\n                return <div key={key}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</div>;\n            default:\n                console.warn('Unknown node type:', node.type); // Log unknown node types\n                return null;\n        }\n    };\n\n    return <div>{data.map((node, index) => renderNode(node, index))}</div>;\n};\n\nfunction App() {\n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n        console.log('JSON Data:', JSON.stringify(jsonData, null, 2)); // Log formatted JSON\n        setData(jsonData);\n    }, []);\n\n    if (!data) {\n        console.log('Data is not loaded yet.');\n        return <div>Loading...</div>;\n    }\n\n    console.log('Rendering with data:', data);\n    return (\n        <div className=\"p-8\">\n            <ContractRenderer data={data} />\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}