{"ast":null,"code":"var _jsxFileName = \"/Users/jerwdti/Desktop/React/IvoProject/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport jsonData from './input/input.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContractRenderer = ({\n  data\n}) => {\n  if (!data || !Array.isArray(data)) return null;\n  const renderNode = (node, key, headerCount = {\n    h4: 1\n  }) => {\n    if (!node) return null; // Handle missing node\n\n    // Render text nodes\n    if (typeof node.text === 'string') {\n      const style = {};\n      if (node.bold) style.fontWeight = 'bold';\n      if (node.underline) style.textDecoration = 'underline';\n      if (node.color) style.backgroundColor = node.color;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: style,\n        children: node.text\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n    }\n\n    // Handle invalid node structure\n    if (!node.type || !node.children) return null;\n\n    // Render nodes based on type\n    switch (node.type) {\n      case 'h1':\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 24\n        }, this);\n      case 'h4':\n        // Add number before <h4> content\n        const headerNumber = `${headerCount.h4}. `;\n        headerCount.h4 += 1; // Increment the header count for the next <h4>\n\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: headerNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), node.children.map((child, index) => renderNode(child, index, headerCount))]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this);\n      case 'p':\n        // Check if any child is a block-level element\n        const hasBlockLevelChildren = node.children.some(child => child.type && ['h1', 'h4', 'ul', 'ol', 'div'].includes(child.type));\n\n        // Use <div> instead of <p> if block-level children are present\n        const Tag = hasBlockLevelChildren ? 'div' : 'p';\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          children: node.children.map((child, index) => {\n            // Render <strong> for bold text\n            if (child.bold) {\n              return /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: renderNode(child, index, headerCount)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 40\n              }, this);\n            }\n            // Render <span> for mentions with color\n            if (child.type === 'mention') {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  backgroundColor: child.color\n                },\n                children: renderNode(child, index, headerCount)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 40\n              }, this);\n            }\n            // Handle line breaks (for \\n in the original text)\n            if (child.text === '\\n') {\n              return /*#__PURE__*/_jsxDEV(\"br\", {}, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 40\n              }, this);\n            }\n            return renderNode(child, index, headerCount);\n          })\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this);\n      case 'ul':\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 24\n        }, this);\n      case 'li':\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 24\n        }, this);\n      case 'lic':\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 24\n        }, this);\n      case 'mention':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: node.color\n          },\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 24\n        }, this);\n      case 'block':\n      case 'clause':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 24\n        }, this);\n      default:\n        console.warn('Unknown node type:', node.type); // Log unknown node types\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map((node, index) => renderNode(node, index))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 12\n  }, this);\n};\n_c = ContractRenderer;\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    console.log('JSON Data:', JSON.stringify(jsonData, null, 2)); // Log formatted JSON\n    setData(jsonData);\n  }, []);\n  if (!data) {\n    console.log('Data is not loaded yet.');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 16\n    }, this);\n  }\n  console.log('Rendering with data:', data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8\",\n    children: /*#__PURE__*/_jsxDEV(ContractRenderer, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ContractRenderer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsonData","jsxDEV","_jsxDEV","ContractRenderer","data","Array","isArray","renderNode","node","key","headerCount","h4","text","style","bold","fontWeight","underline","textDecoration","color","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","type","map","child","index","headerNumber","hasBlockLevelChildren","some","includes","Tag","Fragment","console","warn","_c","App","_s","setData","log","JSON","stringify","className","_c2","$RefreshReg$"],"sources":["/Users/jerwdti/Desktop/React/IvoProject/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport jsonData from './input/input.json';\n\nconst ContractRenderer = ({ data }) => {\n    if (!data || !Array.isArray(data)) return null;\n\n    const renderNode = (node, key, headerCount = { h4: 1 }) => {\n        if (!node) return null; // Handle missing node\n\n        // Render text nodes\n        if (typeof node.text === 'string') {\n            const style = {};\n            if (node.bold) style.fontWeight = 'bold';\n            if (node.underline) style.textDecoration = 'underline';\n            if (node.color) style.backgroundColor = node.color;\n\n            return <span key={key} style={style}>{node.text}</span>;\n        }\n\n        // Handle invalid node structure\n        if (!node.type || !node.children) return null;\n\n        // Render nodes based on type\n        switch (node.type) {\n            case 'h1':\n                return <h1 key={key}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</h1>;\n            case 'h4':\n                // Add number before <h4> content\n                const headerNumber = `${headerCount.h4}. `;\n                headerCount.h4 += 1; // Increment the header count for the next <h4>\n\n                return (\n                    <h4 key={key}>\n                        <span>{headerNumber}</span>\n                        {node.children.map((child, index) => renderNode(child, index, headerCount))}\n                    </h4>\n                );\n            case 'p':\n                // Check if any child is a block-level element\n                const hasBlockLevelChildren = node.children.some(\n                    (child) => child.type && ['h1', 'h4', 'ul', 'ol', 'div'].includes(child.type)\n                );\n\n                // Use <div> instead of <p> if block-level children are present\n                const Tag = hasBlockLevelChildren ? 'div' : 'p';\n\n                return (\n                    <Tag key={key}>\n                        {node.children.map((child, index) => {\n                            // Render <strong> for bold text\n                            if (child.bold) {\n                                return <strong key={index}>{renderNode(child, index, headerCount)}</strong>;\n                            }\n                            // Render <span> for mentions with color\n                            if (child.type === 'mention') {\n                                return <span key={index} style={{ backgroundColor: child.color }}>{renderNode(child, index, headerCount)}</span>;\n                            }\n                            // Handle line breaks (for \\n in the original text)\n                            if (child.text === '\\n') {\n                                return <br key={index} />;\n                            }\n                            return renderNode(child, index, headerCount);\n                        })}\n                    </Tag>\n                );\n            case 'ul':\n                return <ul key={key}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</ul>;\n            case 'li':\n                return <li key={key}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</li>;\n            case 'lic':\n                return <React.Fragment key={key}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</React.Fragment>;\n            case 'mention':\n                return <span key={key} style={{ backgroundColor: node.color }}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</span>;\n            case 'block':\n            case 'clause':\n                return <div key={key}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</div>;\n            default:\n                console.warn('Unknown node type:', node.type); // Log unknown node types\n                return null;\n        }\n    };\n\n    return <div>{data.map((node, index) => renderNode(node, index))}</div>;\n};\n\nfunction App() {\n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n        console.log('JSON Data:', JSON.stringify(jsonData, null, 2)); // Log formatted JSON\n        setData(jsonData);\n    }, []);\n\n    if (!data) {\n        console.log('Data is not loaded yet.');\n        return <div>Loading...</div>;\n    }\n\n    console.log('Rendering with data:', data);\n    return (\n        <div className=\"p-8\">\n            <ContractRenderer data={data} />\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}