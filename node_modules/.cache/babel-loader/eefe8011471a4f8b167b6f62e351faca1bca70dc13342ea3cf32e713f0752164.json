{"ast":null,"code":"var _jsxFileName = \"/Users/jerwdti/Desktop/React/IvoProject/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types'; // For prop validation\nimport jsonData from './input/input.json';\n\n// Helper function to get text styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getTextStyles = node => {\n  let style = {};\n  if (node.bold) style.fontWeight = 'bold';\n  if (node.underline) style.textDecoration = 'underline';\n  if (node.color) style.backgroundColor = node.color;\n  return style;\n};\n\n// ContractRenderer Component\nconst ContractRenderer = /*#__PURE__*/React.memo(_c = ({\n  data\n}) => {\n  if (!data || !Array.isArray(data)) return null;\n  const renderNode = (node, key, headerCount = {\n    h4: 1\n  }) => {\n    if (!node) return null; // Handle missing node\n\n    // Render text nodes\n    if (typeof node.text === 'string') {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: getTextStyles(node),\n        children: node.text\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this);\n    }\n\n    // Handle invalid node structure\n    if (!node.type || !node.children) return null;\n\n    // Prevent block-level elements inside <p> tags\n    const isBlockLevelElement = ['h1', 'h4', 'ul', 'ol', 'div'].includes(node.type);\n\n    // Render nodes based on type\n    switch (node.type) {\n      case 'h1':\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 24\n        }, this);\n      case 'h4':\n        // Add number before <h4> content\n        const headerNumber = `${headerCount.h4}. `;\n        headerCount.h4 += 1; // Increment the header count for the next <h4>\n\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: headerNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), node.children.map((child, index) => renderNode(child, index, headerCount))]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this);\n      case 'p':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: node.children.map((child, index) => {\n            // Render <strong> for bold text\n            if (child.bold) {\n              return /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: renderNode(child, index, headerCount)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 40\n              }, this);\n            }\n            // Render <span> for mentions with color\n            if (child.type === 'mention') {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  backgroundColor: child.color\n                },\n                children: renderNode(child, index, headerCount)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 40\n              }, this);\n            }\n            // Handle line breaks (for \\n in the original text)\n            if (child.text === '\\n') {\n              return /*#__PURE__*/_jsxDEV(\"br\", {}, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 40\n              }, this);\n            }\n            return renderNode(child, index, headerCount);\n          })\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this);\n      case 'ul':\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 24\n        }, this);\n      case 'li':\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 24\n        }, this);\n      case 'lic':\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 24\n        }, this);\n      case 'mention':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: node.color\n          },\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }, this);\n      case 'block':\n      case 'clause':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: node.children.map((child, index) => renderNode(child, index, headerCount))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 24\n        }, this);\n      default:\n        console.warn('Unknown node type:', node.type); // Log unknown node types\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map((node, index) => renderNode(node, index))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 12\n  }, this);\n});\n\n// Prop validation for ContractRenderer\n_c2 = ContractRenderer;\nContractRenderer.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    type: PropTypes.string,\n    text: PropTypes.string,\n    children: PropTypes.array,\n    bold: PropTypes.bool,\n    underline: PropTypes.bool,\n    color: PropTypes.string\n  })).isRequired\n};\n\n// App Component\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    console.log('JSON Data:', JSON.stringify(jsonData, null, 2)); // Log formatted JSON\n    setData(jsonData);\n  }, []);\n  if (!data) {\n    console.log('Data is not loaded yet.');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 16\n    }, this);\n  }\n  console.log('Rendering with data:', data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8\",\n    children: /*#__PURE__*/_jsxDEV(ContractRenderer, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ContractRenderer$React.memo\");\n$RefreshReg$(_c2, \"ContractRenderer\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","jsonData","jsxDEV","_jsxDEV","getTextStyles","node","style","bold","fontWeight","underline","textDecoration","color","backgroundColor","ContractRenderer","memo","_c","data","Array","isArray","renderNode","key","headerCount","h4","text","children","fileName","_jsxFileName","lineNumber","columnNumber","type","isBlockLevelElement","includes","map","child","index","headerNumber","Fragment","console","warn","_c2","propTypes","arrayOf","shape","string","array","bool","isRequired","App","_s","setData","log","JSON","stringify","className","_c3","$RefreshReg$"],"sources":["/Users/jerwdti/Desktop/React/IvoProject/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types'; // For prop validation\nimport jsonData from './input/input.json';\n\n// Helper function to get text styles\nconst getTextStyles = (node) => {\n    let style = {};\n    if (node.bold) style.fontWeight = 'bold';\n    if (node.underline) style.textDecoration = 'underline';\n    if (node.color) style.backgroundColor = node.color;\n    return style;\n};\n\n// ContractRenderer Component\nconst ContractRenderer = React.memo(({ data }) => {\n    if (!data || !Array.isArray(data)) return null;\n\n    const renderNode = (node, key, headerCount = { h4: 1 }) => {\n        if (!node) return null; // Handle missing node\n\n        // Render text nodes\n        if (typeof node.text === 'string') {\n            return <span key={key} style={getTextStyles(node)}>{node.text}</span>;\n        }\n\n        // Handle invalid node structure\n        if (!node.type || !node.children) return null;\n\n        // Prevent block-level elements inside <p> tags\n        const isBlockLevelElement = ['h1', 'h4', 'ul', 'ol', 'div'].includes(node.type);\n\n        // Render nodes based on type\n        switch (node.type) {\n            case 'h1':\n                return <h1 key={key}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</h1>;\n            case 'h4':\n                // Add number before <h4> content\n                const headerNumber = `${headerCount.h4}. `;\n                headerCount.h4 += 1; // Increment the header count for the next <h4>\n\n                return (\n                    <h4 key={key}>\n                        <span>{headerNumber}</span>\n                        {node.children.map((child, index) => renderNode(child, index, headerCount))}\n                    </h4>\n                );\n            case 'p':\n                return (\n                    <p key={key}>\n                        {node.children.map((child, index) => {\n                            // Render <strong> for bold text\n                            if (child.bold) {\n                                return <strong key={index}>{renderNode(child, index, headerCount)}</strong>;\n                            }\n                            // Render <span> for mentions with color\n                            if (child.type === 'mention') {\n                                return <span key={index} style={{ backgroundColor: child.color }}>{renderNode(child, index, headerCount)}</span>;\n                            }\n                            // Handle line breaks (for \\n in the original text)\n                            if (child.text === '\\n') {\n                                return <br key={index} />;\n                            }\n                            return renderNode(child, index, headerCount);\n                        })}\n                    </p>\n                );\n            case 'ul':\n                return <ul key={key}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</ul>;\n            case 'li':\n                return <li key={key}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</li>;\n            case 'lic':\n                return <React.Fragment key={key}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</React.Fragment>;\n            case 'mention':\n                return <span key={key} style={{ backgroundColor: node.color }}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</span>;\n            case 'block':\n            case 'clause':\n                return <div key={key}>{node.children.map((child, index) => renderNode(child, index, headerCount))}</div>;\n            default:\n                console.warn('Unknown node type:', node.type); // Log unknown node types\n                return null;\n        }\n    };\n\n    return <div>{data.map((node, index) => renderNode(node, index))}</div>;\n});\n\n// Prop validation for ContractRenderer\nContractRenderer.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            type: PropTypes.string,\n            text: PropTypes.string,\n            children: PropTypes.array,\n            bold: PropTypes.bool,\n            underline: PropTypes.bool,\n            color: PropTypes.string,\n        })\n    ).isRequired,\n};\n\n// App Component\nfunction App() {\n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n        console.log('JSON Data:', JSON.stringify(jsonData, null, 2)); // Log formatted JSON\n        setData(jsonData);\n    }, []);\n\n    if (!data) {\n        console.log('Data is not loaded yet.');\n        return <div>Loading...</div>;\n    }\n\n    console.log('Rendering with data:', data);\n    return (\n        <div className=\"p-8\">\n            <ContractRenderer data={data} />\n        </div>\n    );\n}\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}