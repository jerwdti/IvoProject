{"ast":null,"code":"var _jsxFileName = \"/Users/jerwdti/Desktop/React/IvoProject/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types'; // For prop validation\nimport jsonData from './input/input.json';\n\n// Helper function to get text styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getTextStyles = node => {\n  let style = {};\n  if (node.bold) style.fontWeight = 'bold';\n  if (node.underline) style.textDecoration = 'underline';\n  if (node.color) style.backgroundColor = node.color;\n  return style;\n};\n\n// ContractRenderer Component\nconst ContractRenderer = /*#__PURE__*/React.memo(_c = ({\n  data\n}) => {\n  if (!data || !Array.isArray(data)) return null;\n  const renderNode = (node, key) => {\n    if (!node) return null; // Handle missing node\n\n    // Render text nodes\n    if (typeof node.text === 'string') {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: getTextStyles(node),\n        children: node.text\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this);\n    }\n\n    // Handle invalid node structure\n    if (!node.type || !node.children) return null;\n\n    // Prevent block-level elements inside <p> tags\n    const isBlockLevelElement = ['h1', 'h4', 'ul', 'ol', 'div'].includes(node.type);\n\n    // Render nodes based on type\n    switch (node.type) {\n      case 'h1':\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: node.children.map((child, index) => renderNode(child, index))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 24\n        }, this);\n      case 'h4':\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: node.children.map((child, index) => renderNode(child, index))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 24\n        }, this);\n      case 'p':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: node.children.map((child, index) => {\n            // If it's a block-level element, render it outside <p>\n            if (isBlockLevelElement) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: renderNode(child, index)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 40\n              }, this);\n            }\n            return renderNode(child, index);\n          })\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this);\n      case 'ul':\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: node.children.map((child, index) => renderNode(child, index))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this);\n      case 'li':\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: node.children.map((child, index) => renderNode(child, index))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }, this);\n      case 'lic':\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: node.children.map((child, index) => renderNode(child, index))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 24\n        }, this);\n      case 'mention':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: node.color\n          },\n          children: node.children.map((child, index) => renderNode(child, index))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 24\n        }, this);\n      case 'block':\n      case 'clause':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: node.children.map((child, index) => renderNode(child, index))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }, this);\n      default:\n        console.warn('Unknown node type:', node.type); // Log unknown node types\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map((node, index) => renderNode(node, index))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 12\n  }, this);\n});\n\n// Prop validation for ContractRenderer\n_c2 = ContractRenderer;\nContractRenderer.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    type: PropTypes.string,\n    text: PropTypes.string,\n    children: PropTypes.array,\n    bold: PropTypes.bool,\n    underline: PropTypes.bool,\n    color: PropTypes.string\n  })).isRequired\n};\n\n// App Component\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    console.log('JSON Data:', JSON.stringify(jsonData, null, 2)); // Log formatted JSON\n    setData(jsonData);\n  }, []);\n  if (!data) {\n    console.log('Data is not loaded yet.');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 16\n    }, this);\n  }\n  console.log('Rendering with data:', data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8\",\n    children: /*#__PURE__*/_jsxDEV(ContractRenderer, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ContractRenderer$React.memo\");\n$RefreshReg$(_c2, \"ContractRenderer\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","jsonData","jsxDEV","_jsxDEV","getTextStyles","node","style","bold","fontWeight","underline","textDecoration","color","backgroundColor","ContractRenderer","memo","_c","data","Array","isArray","renderNode","key","text","children","fileName","_jsxFileName","lineNumber","columnNumber","type","isBlockLevelElement","includes","map","child","index","Fragment","console","warn","_c2","propTypes","arrayOf","shape","string","array","bool","isRequired","App","_s","setData","log","JSON","stringify","className","_c3","$RefreshReg$"],"sources":["/Users/jerwdti/Desktop/React/IvoProject/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types'; // For prop validation\nimport jsonData from './input/input.json';\n\n// Helper function to get text styles\nconst getTextStyles = (node) => {\n    let style = {};\n    if (node.bold) style.fontWeight = 'bold';\n    if (node.underline) style.textDecoration = 'underline';\n    if (node.color) style.backgroundColor = node.color;\n    return style;\n};\n\n// ContractRenderer Component\nconst ContractRenderer = React.memo(({ data }) => {\n    if (!data || !Array.isArray(data)) return null;\n\n    const renderNode = (node, key) => {\n        if (!node) return null; // Handle missing node\n\n        // Render text nodes\n        if (typeof node.text === 'string') {\n            return <span key={key} style={getTextStyles(node)}>{node.text}</span>;\n        }\n\n        // Handle invalid node structure\n        if (!node.type || !node.children) return null;\n\n        // Prevent block-level elements inside <p> tags\n        const isBlockLevelElement = ['h1', 'h4', 'ul', 'ol', 'div'].includes(node.type);\n\n        // Render nodes based on type\n        switch (node.type) {\n            case 'h1':\n                return <h1 key={key}>{node.children.map((child, index) => renderNode(child, index))}</h1>;\n            case 'h4':\n                return <h4 key={key}>{node.children.map((child, index) => renderNode(child, index))}</h4>;\n            case 'p':\n                return (\n                    <p key={key}>\n                        {node.children.map((child, index) => {\n                            // If it's a block-level element, render it outside <p>\n                            if (isBlockLevelElement) {\n                                return <div key={index}>{renderNode(child, index)}</div>;\n                            }\n                            return renderNode(child, index);\n                        })}\n                    </p>\n                );\n            case 'ul':\n                return <ul key={key}>{node.children.map((child, index) => renderNode(child, index))}</ul>;\n            case 'li':\n                return <li key={key}>{node.children.map((child, index) => renderNode(child, index))}</li>;\n            case 'lic':\n                return <React.Fragment key={key}>{node.children.map((child, index) => renderNode(child, index))}</React.Fragment>;\n            case 'mention':\n                return <span key={key} style={{ backgroundColor: node.color }}>{node.children.map((child, index) => renderNode(child, index))}</span>;\n            case 'block':\n            case 'clause':\n                return <div key={key}>{node.children.map((child, index) => renderNode(child, index))}</div>;\n            default:\n                console.warn('Unknown node type:', node.type); // Log unknown node types\n                return null;\n        }\n    };\n\n    return <div>{data.map((node, index) => renderNode(node, index))}</div>;\n});\n\n// Prop validation for ContractRenderer\nContractRenderer.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            type: PropTypes.string,\n            text: PropTypes.string,\n            children: PropTypes.array,\n            bold: PropTypes.bool,\n            underline: PropTypes.bool,\n            color: PropTypes.string,\n        })\n    ).isRequired,\n};\n\n// App Component\nfunction App() {\n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n        console.log('JSON Data:', JSON.stringify(jsonData, null, 2)); // Log formatted JSON\n        setData(jsonData);\n    }, []);\n\n    if (!data) {\n        console.log('Data is not loaded yet.');\n        return <div>Loading...</div>;\n    }\n\n    console.log('Rendering with data:', data);\n    return (\n        <div className=\"p-8\">\n            <ContractRenderer data={data} />\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}